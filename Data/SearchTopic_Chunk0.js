define({"0":{i:0.00198419623696942,u:"../Content/EN/Getting_Started/Description.htm",a:"Getting Started with Talend Studio  Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Getting Started with Talend Studio "},"1":{i:0.00198419623696942,u:"../Content/EN/Getting_Started/Overview.htm",a:"Getting Started Lesson Overview During this training, you will be assigned a  Talend Data Fabric training environment.  The purpose of this lesson is to get familiarized with the Talend Studio by covering the essentials. First, you will start Talend Studio and you will explore the different sections ...",t:"Overview"},"2":{i:0.00367081322541849,u:"../Content/EN/Getting_Started/Starting_Talend_Studio.htm",a:"Overview Before starting to develop using Talend Studio, you need to get familiarized with the environment. The first step is to start the software and open an existing project\n      .Then you will discover the Talend Studio main window and tool bars.  Open a Talend Studio Project  RUN THE STUDIO ...",t:"Starting Talend Studio"},"3":{i:0.00679110554276424,u:"../Content/EN/Getting_Started/First_Job.htm",a:"Creating a First Job Overview In this section, you will create your first Job and learn how to add and connect components. You will make use of the Palette in order to search for components. You will also configure the components in the corresponding Views and finally you will execute the Job by ...",t:"First_Job"},"4":{i:0.00775683956615013,u:"../Content/EN/Getting_Started/Run_First_Job.htm",a:"Running a Job Overview The construction of your Job is complete, and now you are ready to run it and see the results. Run the Job OPEN THE Run VIEW   \n\t\t\t To run the Job, open the Run view (just near the Component tab in the lower half of the window):\n             This is where you execute a Job. ...",t:"First_Job"},"5":{i:0.00857776703876539,u:"../Content/EN/Getting_Started/Wrap-Up.htm",a:"In this lesson, you covered the basics required to build data integration Jobs in the Talend Studio.  You started the Talend Data Fabric Studio and you explored the different sections from the workbench, including the \n        Repository, the Design workspace, the \n        Palette and the ...",t:"Wrap-Up"},"6":{i:0.00198419623696942,u:"../Content/EN/Working_With_Files/Description.htm",a:"Working with Files Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Working with Files"},"7":{i:0.00198419623696942,u:"../Content/EN/Working_With_Files/Overview.htm",a:"Lesson Overview In this lesson you will start working with files.  First you will read a delimited file storing customer information  from your local file system.  Then you will use a data transformation component to apply a basic change to the data: transform the customer\u0027s state name to upper ...",t:"Working with Files"},"8":{i:0.00367081322541849,u:"../Content/EN/Working_With_Files/Reading_a_File.htm",a:"Reading an Input File Overview In the first lesson you already created a simple first Job. In this section you will\n\t\t\t create a new Job that reads data from a CSV delimited file containing customer data. \n\t\t\t The Job will be created in a specific folder that will contain all Jobs related \n\t\t\t to ...",t:"Reading Input"},"9":{i:0.00510448855431517,u:"../Content/EN/Working_With_Files/Transforming_Data.htm",a:"Overview Your \n        UpperCase Job contains a component to provide the input data, now you need to add a component to perform the transformation: converting any lower-case state abbreviation to upper case. Add Component CHOOSE THE COMPONENT tMap Enter \n                tMap into the text box near ...",t:"Transforming Data"},"10":{i:0.00632316423725345,u:"../Content/EN/Working_With_Files/Writing_Output.htm",a:"Overview The construction of your Job is complete, and now you are ready to run it and see the results. Examine input file Before running your Job, examine the input file again.. LOCATE THE FILE  Use the File Browser to locate the Custs.csv file in the C:/StudentFiles folder :\n             OPEN IT ...",t:"Running the Job"},"11":{i:0.0108842178625195,u:"../Content/EN/Working_With_Files/Combining_Columns.htm",a:"Overview The \n \t       tMap component provides the capability to perform a variety of data mapping and transformation functions. Imagine that your destination data store requires the first and last names to be combined in a single column. Follow the steps below to achieve that. Edit Schema OPEN  THE ...",t:"Combining Columns"},"12":{i:0.0112361608242969,u:"../Content/EN/Working_With_Files/Duplicating_a_Job.htm",a:"Overview In the following Exercises you will be build an extension of the previous Job. Rather than starting from scratch with a new Job, or modifying the existing Job so that it no longer performs its intended function, you can duplicate it as the basis for the coming Exercises. Duplicate DUPLICATE ...",t:"Duplicating a Job"},"13":{i:0.00432574375552976,u:"../Content/EN/Working_With_Files/Challenges.htm",a:"Challenges Overview Complete these exercises to further explore the use of \n        tMap in transforming data. See \n         Solutions  for possible solutions to these exercises. Combine Columns Modify the \n        UpperCase_Ex Job previously created so that the output combines the number and street ...",t:"Exercises"},"14":{i:0.00550932274366177,u:"../Content/EN/Working_With_Files/Solutions.htm",a:"Overview These are possible solutions to the \n        challenges . Note that your solutions may differ and still be valid. Combine Columns Configure the \n        CappedOut table in the \n        tMap component, deleting the \n        Number column, and replacing the \n        Street column with a ...",t:"Solutions"},"15":{i:0.00432574375552976,u:"../Content/EN/Working_With_Files/Wrap-Up.htm",a:"In this lesson you learned how to read a delimited file and how to define the related schema. You also learned how to apply simple transformations on the input data and write them into an output file.   tRowGenerator Imagine you wish to have a column in your output files with a random date in 2016. ...",t:"Wrap-Up"},"16":{i:0.00198419623696942,u:"../Content/EN/Joining_Data_Sources/Description.htm",a:"Joining Data Sources Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Joining Data Sources"},"17":{i:0.00198419623696942,u:"../Content/EN/Joining_Data_Sources/Overview.htm",a:"Sources Lesson Overview\n         This lesson provides you with practice joining data from multiple sources. Most enterprises have data in multiple locations and need to combine that data, either to store it in a unified format or to process it consistently. The example you build in this lesson is ...",t:"Joining Data"},"18":{i:0.00367081322541849,u:"../Content/EN/Joining_Data_Sources/CreatingRepositoryItem.htm",a:"Creating Metadata Overview You previously configured a file input component with information about the source file and its schema. That information was local to that particular component. With Talend Studio, you can store such configuration information as \n        Metadata so that you can reuse it ...",t:"CreatingRepositoryItem"},"19":{i:0.00510448855431517,u:"../Content/EN/Joining_Data_Sources/Joining_Data_Sources.htm",a:"Overview In this section, you will first duplicate the Job created in the previous lesson.  Then you will use the file containing state codes and names as a lookup table to include the full state name in the output. Duplicate the Job  DUPLICATE THE UPPER CASE JOB In the \n                Repository, ...",t:"Creating a Join"},"20":{i:0.00632316423725345,u:"../Content/EN/Joining_Data_Sources/Capturing_Rejects.htm",a:"Capturing Join Failures Overview Your lookup  isn\u0027t working as planned. In this section you will configure tmap to examine the rows where the lookup failed. Configure Join Model in tMap OPEN THE row2 TABLE SETTINGS Double-click the \n                tMap component. In the \n                row2 table, ...",t:"Capturing Rejects"},"21":{i:0.00735909135582711,u:"../Content/EN/Joining_Data_Sources/Correcting_the_Lookup.htm",a:"Overview Now that you know the lookup is failing because of lower case string values, you can correct the configuration. You need to convert the state codes to uppercase before comparison in the lookup table. Configure tMap OPEN THE EXPRESSION BUILDER FOR row1.State IN THE LOOKUP TABLE Double-click ...",t:"Correcting the Lookup"},"22":{i:0.00823968277562529,u:"../Content/EN/Joining_Data_Sources/Wrap-Up.htm",a:"In this lesson, you extended the Job from the previous lesson to explore joining two data sources through a \n        tMap component. You looked at how to troubleshoot data issues by capturing join failures, and practiced writing rows to the console. You also stored component configuration ...",t:"Wrap-Up"},"23":{i:0.00198419623696942,u:"../Content/EN/Filtering_Data/Description.htm",a:"Filtering Data Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Filtering Data"},"24":{i:0.00198419623696942,u:"../Content/EN/Filtering_Data/Overview.htm",a:"Filtering Data Lesson Overview\n         A common task in data integration projects is to filter data rows based on content, for separate processing, storage, or reporting. In this lesson, you will build a Job that extends the previous Job to join the customer data with state data and then separate ...",t:"Overview"},"25":{i:0.00367081322541849,u:"../Content/EN/Filtering_Data/Filter_Output_Data.htm",a:"Filter output data  Overview Your Job needs to filter the output based on the \n        \tState code so that the resultant output files are isolated  to specific states. Duplicate Job DUPLICATE THE JOB LookupState Right-click on the Job \n                LookupState and click \n                ...",t:"Adding_Constraints"},"26":{i:0.00510448855431517,u:"../Content/EN/Filtering_Data/Using_tMap_Multiple_Filters.htm",a:"Using tMap for Multiple Filters Overview You will now learn how to filter on several states in one \n        tMap component, following best practices. You will create 3 output files each containing a different state. Duplicate Job DUPLICATE THE Filter_States JOB Right-click on the Job \n               ...",t:"Using_tMap_Multiple_Filters"},"27":{i:0.00632316423725345,u:"../Content/EN/Filtering_Data/Wrap-Up.htm",a:"Wrap-Up In this lesson, you extended the previous Job to generate several output files depending on the State Code. You learned how to filter data based on the value of a column and you created several output tables while using the tMap component. You used the Auto map! function in the tMap ...",t:"Wrap_Up"},"28":{i:0.00198419623696942,u:"../Content/EN/Using_Context_Variables/Description.htm",a:"Using Context Variables Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Using Context Variables"},"29":{i:0.00198419623696942,u:"../Content/EN/Using_Context_Variables/Overview.htm",a:"Using Context Variables Lesson Overview\n         Usually when you are developing a Talend Data Integration project, you are not working in the  final production environment. Because of this, some of the configuration parameters may be different in your development or testing environment than in ...",t:"Working with Contexts"},"30":{i:0.00367081322541849,u:"../Content/EN/Using_Context_Variables/Using_Context_Variables.htm",a:"Create Context Variables Overview With Talend Studio, you can define contexts and context variables that allow you to change the value of different configuration parameters by running a Job in a specific context. Create a Variable DUPLICATE THE JOB UpperCase Right-click the Job \n                ...",t:"Using Context Variables"},"31":{i:0.00510448855431517,u:"../Content/EN/Using_Context_Variables/Using_Repository_Context_Variables.htm",a:"Overview In the previous exercise, you created a built-in context variable that was only available to a single Job. Now you will create a \n        \t\tRepository context variable that can be reused in any Job in the project. Create Repository Context Variable CREATE A CONTEXT GROUP IN THE REPOSITORY ...",t:"Using Repository Context Variables"},"32":{i:0.00632316423725345,u:"../Content/EN/Using_Context_Variables/Challenges.htm",a:"Challenges Overview Complete the following exercise to further explore context variables. See \n         Solutions  for possible solutions to this exercise. New Context and Variable Create a new \n        Repository context variable in the existing context group for the input directory of the customer ...",t:"Exercises"},"33":{i:0.01680317877636,u:"../Content/EN/Using_Context_Variables/Solutions.htm",a:"Overview These are possible solutions to the \n         challenges . Note that your solutions may differ and still be valid. New Context and Variable Right-click \n                LocationContextVariables in the \n                Repository and then click \n                Edit context group. Click \n    ...",t:"Solutions"},"34":{i:0.00912592432338619,u:"../Content/EN/Using_Context_Variables/Wrap-Up.htm",a:"In this lesson, you created contexts and context variables so that you could change the value of specific parameters based on the context in which you run a Job. Typically this is setup for the various environments needed for your company processes, such as development, test and production. You ...",t:"Wrap-Up"},"35":{i:0.00198419623696942,u:"../Content/EN/Error_Handling/Description.htm",a:"Error Handling Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Error Handling"},"36":{i:0.00198419623696942,u:"../Content/EN/Error_Handling/Overview.htm",a:"Error Handling  Lesson Overview\n         In a development or test environment,  you can handle errors  simply by observing the console, but when your project is deployed to production, you want it to deal with errors automatically. In this lesson, you will learn how to handle technical errors but ...",t:"Working with Contexts"},"37":{i:0.00367081322541849,u:"../Content/EN/Error_Handling/Handling_Errors.htm",a:"Overview In this exercise you will create an error, configure the component to raise an exception and then you will learn how to update the level of logs displayed in your execution console. Duplicate Job DUPLICATE THE\n            LookupState JOB\n Right-click the Job \n            LookupState and ...",t:"Handling Errors"},"38":{i:0.00510448855431517,u:"../Content/EN/Error_Handling/Raising_Warnings.htm",a:"Raise a Warning Overview In this exercise you will raise a warning every time the output file contains less rows then the input file.  Limit the Output FIX THE ERROR IN THE INPUT FILE PATH Fix the problem with the \n                Customers File component you introduced earlier by changing the \n     ...",t:"Handling Errors"},"39":{i:0.00632316423725345,u:"../Content/EN/Error_Handling/Wrap-Up.htm",a:"In this lesson, you configured a component to stop the Job\u0027s execution by using the Die on error option. Then, you used the tDie component to display a specific error message in the execution Console.  You also modified the level of log4j messages, which allows to choose the level of information ...",t:"Wrap-Up"},"40":{i:0.00198419623696942,u:"../Content/EN/Generic_Schemas/Description.htm",a:"Generic Schemas Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Generic Schemas"},"41":{i:0.00198419623696942,u:"../Content/EN/Generic_Schemas/Overview.htm",a:"Lesson Overview You will now start working on a new use case.  The scenario is the following: you are taking raw sales data from different retail stores, joining that data with existing customer and product information, and loading the combined data into a combined sales data table.  In this use ...",t:"Working with Generic Schemas"},"42":{i:0.00367081322541849,u:"../Content/EN/Generic_Schemas/Setting_up_Sales_Files.htm",a:"Create a Generic Schema \u0026 Generate Data Files Objective In this lesson you will create a generic schema  in the \n        Repository. This schema will describe sales data information. The generic schema will then be used to generate sales data files. Create the Generic Schema \n             CREATE A ...",t:"Setting up Sales Files_for_database_exercise"},"43":{i:0.00510448855431517,u:"../Content/EN/Generic_Schemas/Creating_Customer_Metadata.htm",a:"Create Customer Metadata Overview Your next step is to create Metadata about the customer file so that you can use it to configure a component. You will also export Metadata information as context variables which is the best way to manage your variables. You are going to use the file ...",t:"Creating Customer Metadata"},"44":{i:0.00632316423725345,u:"../Content/EN/Generic_Schemas/Creating_Product_Metadata.htm",a:"Create Product Metadata Overview Your next step is to create Metadata for the products file so that you can use it to configure a component.  You will also export Metadata information as context variables which is the best way to manage your variables. You are going to follow the same steps as for ...",t:"Creating the Product Table"},"45":{i:0.00735909135582711,u:"../Content/EN/Generic_Schemas/Wrap-Up.htm",a:"In this lesson you created a generic schema to define the structure of sales files.  Then you used the tRowGenerator to create data files for three shops. You used the copy and paste function for creating new Subjobs. You combined 3 Subjobs in one Job to create three different output files. You also ...",t:"Wrap-Up"},"46":{i:0.00198419623696942,u:"../Content/EN/Working_with_Databases/Description.htm",a:"Working with Databases Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Working with Databases"},"47":{i:0.00198419623696942,u:"../Content/EN/Working_with_Databases/Overview.htm",a:"Lesson Overview\n         In this lesson, you explore the features of Talend  Data Integration that allow you to interact with databases.  Recall that the scenario is that you are taking raw sales data from different retail stores, joining that data with existing customer and product information, and ...",t:"Working with Databases"},"48":{i:0.00535743021386756,u:"../Content/EN/Working_with_Databases/Creating_Database_Metadata.htm",a:"Overview Now you are ready to create metadata regarding the connection to your local database server and the specific database. Creating metadata with this information makes it easier to reference it in many components in several Jobs. Create Database Connection Metadata CREATE  DATABASE METADATA IN ...",t:"Creating Database Metadata"},"49":{i:0.00653816388321185,u:"../Content/EN/Working_with_Databases/Creating_a_Database_Table.htm",a:"Creating the Customer Table Overview Your next step is to connect to an existing database, create a table for customer data, and then load data from a text file into that database table. Create new Job CREATE A STANDARD JOB IN THE REPOSITORY Right-click the Sales folder under Job Designs / Standard ...",t:"Creating_the_Customer_Table"},"50":{i:0.00754183992019172,u:"../Content/EN/Working_with_Databases/Creating_Second_Table.htm",a:"Creating the Product Table Overview The next step is to create and populate the product table.  This procedure is very similar to to the Custprep2Table Job so you can duplicate it and make the necessary changes. Duplicate Job DUPLICATE THE JOB Custprep2Table Duplicate the Job                 ...",t:"Creating _the_Product_Table"},"51":{i:0.0100816354628498,u:"../Content/EN/Working_with_Databases/Setting_Up_Shop_Tables.htm",a:"Creating the Sales Table Overview In this training scenario, you are collecting periodic sales information from individual shops to be collated and stored in a master table. First, the temporary sales data you created earlier needs to be combined into a single staging table. Create the Table ...",t:"Setting Up Shop Tables"},"52":{i:0.0105539495243201,u:"../Content/EN/Working_with_Databases/Reading_from_a_Database.htm",a:"Overview With all of the preparation done, you can now create the main Job to join the data and store it in the master table. The main input will be the sales data, and you will use the product and customer tables as lookups. Read the Sales Data CREATE A NEW JOB Create a new Job in the Sales folder ...",t:"Joining the Data"},"53":{i:0.0109554734028154,u:"../Content/EN/Working_with_Databases/Performing_Calculations.htm",a:"Overview You have a couple of steps left to finalize the Job before running it. Those include determining why some rows are rejected and performing basic  calculations on the sales data figures. Capture Rejects OPEN THE tMap MAPPING EDITOR TO CONFIGURE IT TO CAPTURE THE REJECTS Continuing with the \n ...",t:"Finalizing the Job"},"54":{i:0.0112968268655321,u:"../Content/EN/Working_with_Databases/Wrap-Up.htm",a:"In this lesson, you worked with a variety of database access components, including \n        tCreateTable, \n        tMysqlInput, and \n        tMysqlOutput. You learned how to store database connection information as Repository \n        metadata and context variables. Along the way, you worked with ...",t:"Wrap-Up"},"55":{i:0.00198419623696942,u:"../Content/EN/Creating_Master_Jobs/Description.htm",a:"Creating Master Jobs Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Creating Master Jobs"},"56":{i:0.00198419623696942,u:"../Content/EN/Creating_Master_Jobs/Overview.htm",a:"Lesson Overview The next lab will be to create a master Job which includes most of the previous Jobs : The goal here  is to have a single master Job which will run the different Jobs.  Once the master Job is validated, you will export it with all dependencies so that you can provide a package to ...",t:"Creating Master Jobs"},"57":{i:0.00367081322541849,u:"../Content/EN/Creating_Master_Jobs/Creating_a_Master_Job.htm",a:"Overview The purpose of this part is to build a master Job and then export it with its dependencies such as context variables and metadata. This master Job brings together the smaller Jobs you built in this use case. Create a Master Job As you did many times before, you have to create a new Job: ...",t:"Creating a Master Job"},"58":{i:0.00198419623696942,u:"../Content/EN/Creating_Master_Jobs/Challenges.htm",a:"Challenges Overview Complete these exercises to further explore the topics covered here. See  Solutions  for possible solutions to these exercises. Total by Customer Duplicate the  \n        RetailSales Job to RetailSales_Ex and modify it so that it also calculates the total sales quantity by ...",t:"Exercises"},"59":{i:0.00969639821415158,u:"../Content/EN/Creating_Master_Jobs/Solutions.htm",a:"Overview These are possible solutions to the challenges proposed. Note that your solutions may differ and still be valid. Total by Customer Add another output table to the \n                tMap component that includes the customer name and the sales quantity (here called \n                CustSales): ...",t:"Solutions"},"60":{i:0.0102264420136205,u:"../Content/EN/Creating_Master_Jobs/Wrap-Up.htm",a:"In this lesson, you learned how to build a master Job : you put several Jobs in a single master Job using \n        tRunJob components.  You also exported this master Job in a zip file, including all its dependencies such as context variables and metadata.    Next Step Congratulations, you ...",t:"Wrap-Up"},"61":{i:0.00198419623696942,u:"../Content/EN/Working_with_Web_Services/Description.htm",a:"Working with Web Services Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Working with Web Services"},"62":{i:0.00198419623696942,u:"../Content/EN/Working_with_Web_Services/Overview.htm",a:"Lesson Overview You have used Talend Studio to read from and write to both files and database tables. In this lesson you will access a Web Service.  Specifically, you will create a Job that uses a Web Service method to retrieve weather information for a location identified by a US Zip code: ...",t:"Working with Web Services"},"63":{i:0.00367081322541849,u:"../Content/EN/Working_with_Web_Services/Accessing_a_Web_Service.htm",a:"Overview Talend Studio allows you to interact with a Web Service as part of a project. In this example, you retrieve weather information from a free Web Service \n        that can be used for testing Web Service calls.  Note that this Web Service is used for testing and as such may not have results ...",t:"Accessing a Web Service"},"64":{i:0.00510448855431517,u:"../Content/EN/Working_with_Web_Services/Detailed_Output.htm",a:"Detailed Output Overview Using the Metadata again you now will process the output for this data Detailed Output ADD ANOTHER MAPPING COMPONENT AND CONNECT IT Add another component \n            tXMLMap to the existing Job and right-click on \n            tLogRow_1 to connect it to the newly added ...",t:"Detailed_Output"},"65":{i:0.00632316423725345,u:"../Content/EN/Working_with_Web_Services/Wrap-Up.htm",a:"In this lesson, you used the \n        tESBConsumer component to call a Web Service. You saw how to map the input parameters to a request schema and how to check the resulting response schema.  You also learned how to activate/deactivate a component in a Job and change basic formatting with respect ...",t:"Wrap-Up"},"66":{i:0.00198419623696942,u:"../Content/EN/Running_Jobs_Standalone/Description.htm",a:"Running Jobs Standalone Introduction \n\t\t\t//changes the menu\n\t\t\t$(\"#vNavContent\").remove();\n\t\t\t$(\"#vPresNavContent\").css(\u0027display\u0027,\u0027block\u0027);\n\t\t\t$(\".closeAll\").remove();\n\t\t\t\n\t\t\t//launches the slideshow\n\t\t\tdocument.onload=vAutomaticSlideSlow();\n\t\t\t\n\t\t\t\n\t\t",t:"Running Jobs Standalone"},"67":{i:0.00198419623696942,u:"../Content/EN/Running_Jobs_Standalone/Overview.htm",a:"Lesson Overview\n         So far, you have run your Jobs using Talend Studio. In a production environment, you will want to have your Jobs available to run independently of the Studio. For example, on a different Windows or Linux server. In this lesson, you will take an existing Job and set it up so ...",t:"Running Jobs Standalone"},"68":{i:0.00367081322541849,u:"../Content/EN/Running_Jobs_Standalone/Building_a_Job.htm",a:"Overview In an earlier lesson, you exported both parent and child Jobs. These Jobs can be shared with others, but still only run within the context of the Talend Studio. In many situations, you will need to run a Talend Job independent of the Talend Studio. In order to do that, you need to build and ...",t:"Building a Job"},"69":{i:0.00510448855431517,u:"../Content/EN/Running_Jobs_Standalone/Modifying_the_Job.htm",a:"Overview When you are working on a large project, you may want to save the current version of a Job before making changes in case you need to revert. Create a New Version OPEN ANOTHER VERSION OF THE FilterStates_tMap Close the \n                FilterStates_tMap Job. Right-click the Job in the \n      ...",t:"Modifying the Job"},"70":{i:0.00198419623696942,u:"../Content/EN/Running_Jobs_Standalone/Challenges.htm",a:"Challenges Overview Complete these exercises to further explore the topics covered here. See \n         Solutions  for possible solutions to these exercises. Display Output Change the other two filter criteria in the second \n        tMap component to \n        MN and \n        IL and also change the ...",t:"Exercises"},});