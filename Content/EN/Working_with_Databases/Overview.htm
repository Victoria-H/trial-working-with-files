<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Working with Databases">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Working with Databases</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <style>		
			@import URL(https://fonts.googleapis.com/css?family=Noto+Sans);
		</style>
        <link href="../../Resources/Stylesheets/vMain.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../Resources/Scripts/tincan-min.js">
        </script>
        <script src="../../Resources/Scripts/vicky.js">
        </script>
    </head>
    <body>
        <div class="vModuleNav" id="vNavContent">
            <ul class="moduleNav _Skins_SideMenu mc-component">
                <li class="has-children"><a href="Description.htm">Working with Databases</a>
                    <ul class="sub-menu">
                        <li><a href="#" class="selected">Overview</a>
                        </li>
                        <li><a href="Creating_Database_Metadata.htm">Creating Database Metadata</a>
                        </li>
                        <li><a href="Creating_a_Database_Table.htm">Creating the Customer Table</a>
                        </li>
                        <li><a href="Creating_Second_Table.htm">Creating the Product Table</a>
                        </li>
                        <li><a href="Setting_Up_Shop_Tables.htm">Setting Up Sales Table</a>
                        </li>
                        <li><a href="Reading_from_a_Database.htm">Joining the Data</a>
                        </li>
                        <li><a href="Performing_Calculations.htm">Finalizing the Job</a>
                        </li>
                        <li><a href="Wrap-Up.htm">Wrap-Up</a>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <div class="vModuleNav" id="vPresNavContent" style="display:none">
            <ul class="moduleNav _Skins_SideMenu mc-component">
                <li class="has-children"><a href="Description.htm">Working with Databases</a>
                    <ul class="sub-menu">
                        <li><a href="#" class="selected">Overview</a>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <div id="vTopArea">
            <p id="vTitleNav">My Title</p>
            <img id="vLogo" src="../../Resources/Images/OtherGraphics/logo.png" alt="" />
        </div>
        <div id="vPrettyScroll">
        </div>
        <div class="closeAll">	
			OPEN ALL<img class="shotA" id="open" src="../../Resources/Images/OtherGraphics/shot_1x1.png" alt="" style="width: 1;height: 1;" />
			CLOSE ALL<img class="shotCloseA" id="close" src="../../Resources/Images/OtherGraphics/shotclose_1x1.png" alt="" style="width: 1;height: 1;" /></div>
        <div class="content mySideNavContent">
            <div id="contentBody">
                <div class="row collapse">
                    <div class="sideContent">
                    </div>
                    <h1>Working with Databases</h1>
                    <h2>Lesson Overview
        </h2>
                    <p>In this lesson, you explore the features of Talend  Data Integration that allow you to interact with databases. </p>
                    <p>Recall that the scenario is that you are taking raw sales data from different retail stores, joining that data with existing customer and product information, and loading the combined data into the combined sales data table.</p>
                    <p>As part of the setup for this scenario, you will first create a database table for customer data, load that data from a text file into the database, and then repeat the process for product data:</p>
                    <p>
                        <img src="../../Resources/Images/lesson8/overview1.png" alt="" />
                    </p>
                    <p>You will then take data files representing sales information from three different stores, and then load that information into a database table. </p>
                    <p>Finally, you will join the sales table with the product and customer tables to create a combined master sales table</p>
                    <p>
                        <img src="../../Resources/Images/lesson8/overview2.png" alt="" />
                    </p>
                    <p>As further exploration, you will generate total sales numbers by customer and by product.</p>
                    <h2>Objectives
        </h2>
                    <p>After completing this lesson, you will be able to:</p>
                    <ul>
                        <li value="1">
                            <p>Connect to a database from a Talend Job</p>
                        </li>
                        <li value="2">
                            <p>Use a component to create a database table</p>
                        </li>
                        <li value="3">
                            <p>Write to and read from a database table from within a Talend Job</p>
                        </li>
                        <li value="4">
                            <p>Filter unique data rows</p>
                        </li>
                        <li value="5">
                            <p>Perform aggregate calculations on rows</p>
                        </li>
                        <li value="6">
                            <p>Write data to an XML file from a Talend Job</p>
                        </li>
                    </ul>
                    <h2>Next Step
        </h2>
                    <p>The first step is to 
        <a href="Creating_Database_Metadata.htm">create database metadata</a></p>
                    <!-- Tin Can API Wrapper -->
                    <script>/* <![CDATA[ */
// Uncomment the following line to enable debug statements in the web console of the browser
//TinCan.enableDebug();

// Initialize a TinCan object.
// Several properties forwarded through the Activity Provider (AP) are automatically set, like the endpoint and authentication:
// Refer to http://scorm.com/wp-content/assets/tincandocs/Incorporating-a-Tin-Can-LRS-into-an-LMS.pdf for more details
var tincan = new TinCan (
	{
		url: window.location.href,
	}
);

// Send activity initialization statement
// 'duration' is set to 0 seconds (pattern is "PT1H37M56.34S" = 1 hour, 37 min and 56.34 seconds)
tincan.sendStatement(
	{
		verb: {
			id: "http://adlnet.gov/expapi/verbs/attempted",
			display: {
				"en-US": "attempted"
			}
		},
		result: {
			duration: "PT0S"
		}
	}
);

// Marshall TinCan object to Local Storage for later reuse in other pages
localStorage.setItem("tincan", JSON.stringify(tincan));
		/* ]]> */</script>
                    <!-- /Tin Can API Wrapper -->
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <h6>Copyright Â© <span class="GeneralYear">2016</span> Talend Inc.</h6>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                </div>
            </div>
        </div>
        <script>/* <![CDATA[ */
	
		
			document.onload=vPoshSideNav();
			document.onload=vOpenClose();
			document.onload=vQuiz();
			
		/* ]]> */</script>
    </body>
</html>